
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//		Template updated by: Mohammad Ashraful Alam, Microsoft MVP, ASP.NET [admin@ashraful.net]
//		Modification comment: made few items mockable. (03-30-2010)
//			* Made ObjectSet properties of database context as virtual and return type as IObjectSet
//			* Made stored procedure (function import) methods virtual and return type as List<Entity>
//			* Seperate name space for data containers	
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Data.Objects;
using System.Data.EntityClient;
using System.Collections.Generic;//custom-code
using YPortal.BusinessEntities;//custom-code

namespace YPortal.DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseContext object using the connection string found in the 'DatabaseContext' section of the application configuration file.
        /// </summary>
        public DatabaseContext() : base("name=DatabaseContext", "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseContext object.
        /// </summary>
        public DatabaseContext(string connectionString) : base(connectionString, "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseContext object.
        /// </summary>
        public DatabaseContext(EntityConnection connection) : base(connection, "DatabaseContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<AdminUser> AdminUsers//custom-code for testability
        {
            get
            {
                if ((_AdminUsers == null))
                {
                    _AdminUsers = base.CreateObjectSet<AdminUser>("AdminUsers");
                }
                return _AdminUsers;
            }
        }
        private ObjectSet<AdminUser> _AdminUsers;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Contact> Contacts//custom-code for testability
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Interest> Interests//custom-code for testability
        {
            get
            {
                if ((_Interests == null))
                {
                    _Interests = base.CreateObjectSet<Interest>("Interests");
                }
                return _Interests;
            }
        }
        private ObjectSet<Interest> _Interests;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Location> Locations//custom-code for testability
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<AppSetting> AppSettings//custom-code for testability
        {
            get
            {
                if ((_AppSettings == null))
                {
                    _AppSettings = base.CreateObjectSet<AppSetting>("AppSettings");
                }
                return _AppSettings;
            }
        }
        private ObjectSet<AppSetting> _AppSettings;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Blast> Blasts//custom-code for testability
        {
            get
            {
                if ((_Blasts == null))
                {
                    _Blasts = base.CreateObjectSet<Blast>("Blasts");
                }
                return _Blasts;
            }
        }
        private ObjectSet<Blast> _Blasts;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<Campaign> Campaigns//custom-code for testability
        {
            get
            {
                if ((_Campaigns == null))
                {
                    _Campaigns = base.CreateObjectSet<Campaign>("Campaigns");
                }
                return _Campaigns;
            }
        }
        private ObjectSet<Campaign> _Campaigns;
    
        /// <summary>..
        /// No Metadata Documentation available.
        /// </summary>
        public virtual IObjectSet<LandingPageProspect> LandingPageProspects//custom-code for testability
        {
            get
            {
                if ((_LandingPageProspects == null))
                {
                    _LandingPageProspects = base.CreateObjectSet<LandingPageProspect>("LandingPageProspects");
                }
                return _LandingPageProspects;
            }
        }
        private ObjectSet<LandingPageProspect> _LandingPageProspects;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdminUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdminUsers(AdminUser adminUser)
        {
            base.AddObject("AdminUsers", adminUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Interests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInterests(Interest interest)
        {
            base.AddObject("Interests", interest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppSettings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppSettings(AppSetting appSetting)
        {
            base.AddObject("AppSettings", appSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blasts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlasts(Blast blast)
        {
            base.AddObject("Blasts", blast);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Campaigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaigns(Campaign campaign)
        {
            base.AddObject("Campaigns", campaign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LandingPageProspects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLandingPageProspects(LandingPageProspect landingPageProspect)
        {
            base.AddObject("LandingPageProspects", landingPageProspect);
        }

        #endregion

    }
    

    #endregion

    }//custom-code
    
